Things to do for project

Main idea: eliminate the ExecutionTree data structure, and hold the tree structure entirely
  in the inductive relation node_eval
- Relate a program and a single node: for each type of statement, have a constructor that
  adds either one or two nodes to the relation
- Now we can do induction "bottom up"

Issue: will we ever need information from the whole tree? How to do property 2?

- Factor out into multiple files
- General proofs
- Potentially separate out into one file with all definitions and another with proofs
- Prove that when adding a node, the index in the tree of where we want to add doesn't get impacted

Notation wish list:
- Replace S (S O) in proofs with %nat

Later:
- Writing a program more cleanly
  * Redefine program to match Imp model

