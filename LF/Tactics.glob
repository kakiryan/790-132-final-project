DIGEST ccd5374396f84ff68ad2f424c7a75085
FLF.Tactics
R664:667 LF.Poly <> <> lib
prf 943:948 <> silly1
R966:968 Coq.Init.Datatypes <> nat ind
binder 960:960 <> n:1
binder 962:962 <> m:2
R979:984 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R975:977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R974:974 LF.Tactics <> n:1 var
R978:978 LF.Tactics <> m:2 var
R986:988 Coq.Init.Logic <> ::type_scope:x_'='_x not
R985:985 LF.Tactics <> n:1 var
R989:989 LF.Tactics <> m:2 var
prf 1474:1479 <> silly2
R1501:1503 Coq.Init.Datatypes <> nat ind
binder 1491:1491 <> n:3
binder 1493:1493 <> m:4
binder 1495:1495 <> o:5
binder 1497:1497 <> p:6
R1514:1519 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1510:1512 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1509:1509 LF.Tactics <> n:3 var
R1513:1513 LF.Tactics <> m:4 var
R1520:1520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1543:1549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1526:1529 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1522:1524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1521:1521 LF.Tactics <> n:3 var
R1525:1525 LF.Tactics <> m:4 var
R1535:1537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1530:1530 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1532:1532 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1534:1534 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1531:1531 LF.Tactics <> n:3 var
R1533:1533 LF.Tactics <> o:5 var
R1538:1538 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1540:1540 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1542:1542 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1539:1539 LF.Tactics <> m:4 var
R1541:1541 LF.Tactics <> p:6 var
R1555:1557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1550:1550 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1552:1552 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1554:1554 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1551:1551 LF.Tactics <> n:3 var
R1553:1553 LF.Tactics <> o:5 var
R1558:1558 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1560:1560 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1562:1562 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1559:1559 LF.Tactics <> m:4 var
R1561:1561 LF.Tactics <> p:6 var
prf 2092:2098 <> silly2a
R2116:2118 Coq.Init.Datatypes <> nat ind
binder 2110:2110 <> n:7
binder 2112:2112 <> m:8
R2137:2143 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2129:2131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2124:2124 LF.Poly <> :::'('_x_','_x_')' not
R2126:2126 LF.Poly <> :::'('_x_','_x_')' not
R2128:2128 LF.Poly <> :::'('_x_','_x_')' not
R2125:2125 LF.Tactics <> n:7 var
R2127:2127 LF.Tactics <> n:7 var
R2132:2132 LF.Poly <> :::'('_x_','_x_')' not
R2134:2134 LF.Poly <> :::'('_x_','_x_')' not
R2136:2136 LF.Poly <> :::'('_x_','_x_')' not
R2133:2133 LF.Tactics <> m:8 var
R2135:2135 LF.Tactics <> m:8 var
R2144:2144 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2191:2197 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2159:2161 Coq.Init.Datatypes <> nat ind
binder 2153:2153 <> q:9
binder 2155:2155 <> r:10
R2178:2181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2170:2172 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2165:2165 LF.Poly <> :::'('_x_','_x_')' not
R2167:2167 LF.Poly <> :::'('_x_','_x_')' not
R2169:2169 LF.Poly <> :::'('_x_','_x_')' not
R2166:2166 LF.Tactics <> q:9 var
R2168:2168 LF.Tactics <> q:9 var
R2173:2173 LF.Poly <> :::'('_x_','_x_')' not
R2175:2175 LF.Poly <> :::'('_x_','_x_')' not
R2177:2177 LF.Poly <> :::'('_x_','_x_')' not
R2174:2174 LF.Tactics <> r:10 var
R2176:2176 LF.Tactics <> r:10 var
R2185:2187 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2182:2182 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2184:2184 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2183:2183 LF.Tactics <> q:9 var
R2188:2188 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2190:2190 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2189:2189 LF.Tactics <> r:10 var
R2201:2203 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2198:2198 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2200:2200 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2199:2199 LF.Tactics <> n:7 var
R2204:2204 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2206:2206 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2205:2205 LF.Tactics <> m:8 var
prf 2405:2412 <> silly_ex
binder 2423:2423 <> p:11
R2428:2428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2474:2480 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2436:2436 <> n:12
R2452:2455 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2445:2447 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2439:2442 LF.Basics <> even def
R2444:2444 LF.Tactics <> n:12 var
R2448:2451 LF.Basics <> true constr
R2466:2468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2456:2459 LF.Basics <> even def
R2462:2462 Coq.Init.Datatypes <> S constr
R2464:2464 LF.Tactics <> n:12 var
R2469:2473 LF.Basics <> false constr
R2481:2481 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2522:2528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2489:2489 <> n:13
R2506:2509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2498:2500 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2492:2495 LF.Basics <> even def
R2497:2497 LF.Tactics <> n:13 var
R2501:2505 LF.Basics <> false constr
R2515:2517 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2510:2512 LF.Basics <> odd def
R2514:2514 LF.Tactics <> n:13 var
R2518:2521 LF.Basics <> true constr
R2542:2547 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2535:2537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2529:2532 LF.Basics <> even def
R2534:2534 LF.Tactics <> p:11 var
R2538:2541 LF.Basics <> true constr
R2557:2559 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2548:2550 LF.Basics <> odd def
R2553:2553 Coq.Init.Datatypes <> S constr
R2555:2555 LF.Tactics <> p:11 var
R2560:2563 LF.Basics <> true constr
prf 2861:2866 <> silly3
R2884:2886 Coq.Init.Datatypes <> nat ind
binder 2878:2878 <> n:14
binder 2880:2880 <> m:15
R2897:2902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2893:2895 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2892:2892 LF.Tactics <> n:14 var
R2896:2896 LF.Tactics <> m:15 var
R2904:2906 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2903:2903 LF.Tactics <> m:15 var
R2907:2907 LF.Tactics <> n:14 var
R3156:3164 LF.Poly <> app_nil_r thm
R3174:3182 LF.Poly <> app_assoc thm
R3192:3204 LF.Poly <> rev_app_distr thm
R3214:3227 LF.Poly <> rev_involutive thm
prf 3698:3710 <> rev_exercise1
R3729:3732 LF.Poly <> list ind
R3734:3736 Coq.Init.Datatypes <> nat ind
binder 3722:3722 <> l:16
binder 3724:3725 <> l':17
R3752:3757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3743:3745 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3742:3742 LF.Tactics <> l:16 var
R3746:3748 LF.Poly <> rev def
R3750:3751 LF.Tactics <> l':17 var
R3760:3762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3758:3759 LF.Tactics <> l':17 var
R3763:3765 LF.Poly <> rev def
R3767:3767 LF.Tactics <> l:16 var
R3821:3834 LF.Poly <> rev_involutive thm
R3821:3834 LF.Poly <> rev_involutive thm
def 4308:4323 <> trans_eq_example
R4349:4351 Coq.Init.Datatypes <> nat ind
binder 4335:4335 <> a:18
binder 4337:4337 <> b:19
binder 4339:4339 <> c:20
binder 4341:4341 <> d:21
binder 4343:4343 <> e:22
binder 4345:4345 <> f:23
R4373:4381 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4365:4367 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4360:4360 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4362:4362 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4364:4364 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4361:4361 LF.Tactics <> a:18 var
R4363:4363 LF.Tactics <> b:19 var
R4368:4368 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4370:4370 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4372:4372 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4369:4369 LF.Tactics <> c:20 var
R4371:4371 LF.Tactics <> d:21 var
R4395:4403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4387:4389 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4382:4382 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4384:4384 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4386:4386 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4383:4383 LF.Tactics <> c:20 var
R4385:4385 LF.Tactics <> d:21 var
R4390:4390 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4392:4392 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4394:4394 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4391:4391 LF.Tactics <> e:22 var
R4393:4393 LF.Tactics <> f:23 var
R4409:4411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4404:4404 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4406:4406 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4408:4408 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4405:4405 LF.Tactics <> a:18 var
R4407:4407 LF.Tactics <> b:19 var
R4412:4412 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4414:4414 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4416:4416 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4413:4413 LF.Tactics <> e:22 var
R4415:4415 LF.Tactics <> f:23 var
prf 4676:4683 <> trans_eq
binder 4695:4695 <> X:24
R4712:4712 LF.Tactics <> X:24 var
binder 4704:4704 <> n:25
binder 4706:4706 <> m:26
binder 4708:4708 <> o:27
R4723:4726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4719:4721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4718:4718 LF.Tactics <> n:25 var
R4722:4722 LF.Tactics <> m:26 var
R4732:4735 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4728:4730 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4727:4727 LF.Tactics <> m:26 var
R4731:4731 LF.Tactics <> o:27 var
R4737:4739 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4736:4736 LF.Tactics <> n:25 var
R4740:4740 LF.Tactics <> o:27 var
def 4995:5011 <> trans_eq_example'
R5037:5039 Coq.Init.Datatypes <> nat ind
binder 5023:5023 <> a:28
binder 5025:5025 <> b:29
binder 5027:5027 <> c:30
binder 5029:5029 <> d:31
binder 5031:5031 <> e:32
binder 5033:5033 <> f:33
R5061:5069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5053:5055 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5048:5048 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5050:5050 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5052:5052 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5049:5049 LF.Tactics <> a:28 var
R5051:5051 LF.Tactics <> b:29 var
R5056:5056 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5058:5058 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5060:5060 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5057:5057 LF.Tactics <> c:30 var
R5059:5059 LF.Tactics <> d:31 var
R5083:5091 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5075:5077 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5070:5070 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5072:5072 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5074:5074 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5071:5071 LF.Tactics <> c:30 var
R5073:5073 LF.Tactics <> d:31 var
R5078:5078 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5080:5080 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5082:5082 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5079:5079 LF.Tactics <> e:32 var
R5081:5081 LF.Tactics <> f:33 var
R5097:5099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5092:5092 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5094:5094 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5096:5096 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5093:5093 LF.Tactics <> a:28 var
R5095:5095 LF.Tactics <> b:29 var
R5100:5100 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5102:5102 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5104:5104 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5101:5101 LF.Tactics <> e:32 var
R5103:5103 LF.Tactics <> f:33 var
R5577:5577 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5579:5579 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5581:5581 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5559:5566 LF.Tactics <> trans_eq thm
R5577:5577 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5579:5579 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5581:5581 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5559:5566 LF.Tactics <> trans_eq thm
def 6061:6078 <> trans_eq_example''
R6104:6106 Coq.Init.Datatypes <> nat ind
binder 6090:6090 <> a:34
binder 6092:6092 <> b:35
binder 6094:6094 <> c:36
binder 6096:6096 <> d:37
binder 6098:6098 <> e:38
binder 6100:6100 <> f:39
R6128:6136 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6120:6122 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6115:6115 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6117:6117 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6119:6119 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6116:6116 LF.Tactics <> a:34 var
R6118:6118 LF.Tactics <> b:35 var
R6123:6123 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6125:6125 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6127:6127 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6124:6124 LF.Tactics <> c:36 var
R6126:6126 LF.Tactics <> d:37 var
R6150:6158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6142:6144 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6137:6137 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6139:6139 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6141:6141 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6138:6138 LF.Tactics <> c:36 var
R6140:6140 LF.Tactics <> d:37 var
R6145:6145 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6147:6147 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6149:6149 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6146:6146 LF.Tactics <> e:38 var
R6148:6148 LF.Tactics <> f:39 var
R6164:6166 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6159:6159 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6161:6161 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6163:6163 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6160:6160 LF.Tactics <> a:34 var
R6162:6162 LF.Tactics <> b:35 var
R6167:6167 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6169:6169 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6171:6171 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6168:6168 LF.Tactics <> e:38 var
R6170:6170 LF.Tactics <> f:39 var
R6226:6226 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6228:6228 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6230:6230 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6226:6226 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6228:6228 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6230:6230 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6343:6359 <> trans_eq_exercise
R6381:6383 Coq.Init.Datatypes <> nat ind
binder 6371:6371 <> n:40
binder 6373:6373 <> m:41
binder 6375:6375 <> o:42
binder 6377:6377 <> p:43
R6408:6416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6393:6396 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6407:6407 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6392:6392 LF.Tactics <> m:41 var
R6397:6404 LF.Basics <> minustwo def
R6406:6406 LF.Tactics <> o:42 var
R6428:6436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6417:6417 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6423:6426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6419:6421 LF.Basics <> ::nat_scope:x_'+'_x not
R6418:6418 LF.Tactics <> n:40 var
R6422:6422 LF.Tactics <> p:43 var
R6427:6427 LF.Tactics <> m:41 var
R6437:6437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6443:6447 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6458:6458 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6439:6441 LF.Basics <> ::nat_scope:x_'+'_x not
R6438:6438 LF.Tactics <> n:40 var
R6442:6442 LF.Tactics <> p:43 var
R6448:6455 LF.Basics <> minustwo def
R6457:6457 LF.Tactics <> o:42 var
R6521:6523 LF.Basics <> ::nat_scope:x_'+'_x not
R6500:6507 LF.Tactics <> trans_eq thm
R6521:6523 LF.Basics <> ::nat_scope:x_'+'_x not
R6500:6507 LF.Tactics <> trans_eq thm
prf 7891:7901 <> S_injective
R7919:7921 Coq.Init.Datatypes <> nat ind
binder 7913:7913 <> n:44
binder 7915:7915 <> m:45
R7936:7941 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7930:7932 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7927:7927 Coq.Init.Datatypes <> S constr
R7929:7929 LF.Tactics <> n:44 var
R7933:7933 Coq.Init.Datatypes <> S constr
R7935:7935 LF.Tactics <> m:45 var
R7943:7945 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7942:7942 LF.Tactics <> n:44 var
R7946:7946 LF.Tactics <> m:45 var
R7988:7990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7991:7994 Coq.Init.Peano <> pred syndef
R7997:7997 Coq.Init.Datatypes <> S constr
R7988:7990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7991:7994 Coq.Init.Peano <> pred syndef
R7997:7997 Coq.Init.Datatypes <> S constr
prf 8486:8497 <> S_injective'
R8515:8517 Coq.Init.Datatypes <> nat ind
binder 8509:8509 <> n:46
binder 8511:8511 <> m:47
R8532:8537 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8526:8528 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8523:8523 Coq.Init.Datatypes <> S constr
R8525:8525 LF.Tactics <> n:46 var
R8529:8529 Coq.Init.Datatypes <> S constr
R8531:8531 LF.Tactics <> m:47 var
R8539:8541 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8538:8538 LF.Tactics <> n:46 var
R8542:8542 LF.Tactics <> m:47 var
prf 9053:9065 <> injection_ex1
R9085:9087 Coq.Init.Datatypes <> nat ind
binder 9077:9077 <> n:48
binder 9079:9079 <> m:49
binder 9081:9081 <> o:50
R9106:9111 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9098:9100 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9093:9093 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9095:9095 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9097:9097 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9094:9094 LF.Tactics <> n:48 var
R9096:9096 LF.Tactics <> m:49 var
R9101:9101 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9103:9103 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9105:9105 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9102:9102 LF.Tactics <> o:50 var
R9104:9104 LF.Tactics <> o:50 var
R9113:9115 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9112:9112 LF.Tactics <> n:48 var
R9116:9116 LF.Tactics <> m:49 var
prf 9407:9419 <> injection_ex2
R9439:9441 Coq.Init.Datatypes <> nat ind
binder 9431:9431 <> n:51
binder 9433:9433 <> m:52
binder 9435:9435 <> o:53
R9462:9467 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9453:9455 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9447:9447 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9449:9450 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9452:9452 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9448:9448 LF.Tactics <> n:51 var
R9451:9451 LF.Tactics <> m:52 var
R9456:9456 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9458:9459 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9461:9461 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9457:9457 LF.Tactics <> o:53 var
R9460:9460 LF.Tactics <> o:53 var
R9469:9471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9468:9468 LF.Tactics <> n:51 var
R9472:9472 LF.Tactics <> m:52 var
def 9662:9674 <> injection_ex3
binder 9686:9686 <> X:54
R9705:9705 LF.Tactics <> X:54 var
binder 9697:9697 <> x:55
binder 9699:9699 <> y:56
binder 9701:9701 <> z:57
R9715:9718 LF.Poly <> list ind
R9720:9720 LF.Tactics <> X:54 var
binder 9709:9709 <> l:58
binder 9711:9711 <> j:59
R9746:9751 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9737:9739 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9727:9730 LF.Poly <> :::x_'::'_x not
R9726:9726 LF.Tactics <> x:55 var
R9732:9735 LF.Poly <> :::x_'::'_x not
R9731:9731 LF.Tactics <> y:56 var
R9736:9736 LF.Tactics <> l:58 var
R9741:9744 LF.Poly <> :::x_'::'_x not
R9740:9740 LF.Tactics <> z:57 var
R9745:9745 LF.Tactics <> j:59 var
R9762:9767 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9753:9755 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9752:9752 LF.Tactics <> j:59 var
R9757:9760 LF.Poly <> :::x_'::'_x not
R9756:9756 LF.Tactics <> z:57 var
R9761:9761 LF.Tactics <> l:58 var
R9769:9771 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9768:9768 LF.Tactics <> x:55 var
R9772:9772 LF.Tactics <> y:56 var
R9841:9848 LF.Tactics <> trans_eq thm
R9841:9848 LF.Tactics <> trans_eq thm
R9900:9902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9895:9898 LF.Poly <> :::x_'::'_x not
R9904:9907 LF.Poly <> :::x_'::'_x not
R9900:9902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9895:9898 LF.Poly <> :::x_'::'_x not
R9904:9907 LF.Poly <> :::x_'::'_x not
prf 10703:10718 <> discriminate_ex1
R10736:10738 Coq.Init.Datatypes <> nat ind
binder 10730:10730 <> n:60
binder 10732:10732 <> m:61
R10756:10761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10749:10751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10744:10748 LF.Basics <> false constr
R10752:10755 LF.Basics <> true constr
R10763:10765 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10762:10762 LF.Tactics <> n:60 var
R10766:10766 LF.Tactics <> m:61 var
prf 10832:10847 <> discriminate_ex2
R10863:10865 Coq.Init.Datatypes <> nat ind
binder 10859:10859 <> n:62
R10878:10883 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10874:10876 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10871:10871 Coq.Init.Datatypes <> S constr
R10873:10873 LF.Tactics <> n:62 var
R10877:10877 Coq.Init.Datatypes <> O constr
R10889:10891 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10885:10887 LF.Basics <> ::nat_scope:x_'+'_x not
def 11712:11727 <> discriminate_ex3
binder 11741:11741 <> X:63
R11760:11760 LF.Tactics <> X:63 var
binder 11752:11752 <> x:64
binder 11754:11754 <> y:65
binder 11756:11756 <> z:66
R11768:11771 LF.Poly <> list ind
R11773:11773 LF.Tactics <> X:63 var
binder 11764:11764 <> l:67
R11797:11804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11792:11794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11782:11785 LF.Poly <> :::x_'::'_x not
R11781:11781 LF.Tactics <> x:64 var
R11787:11790 LF.Poly <> :::x_'::'_x not
R11786:11786 LF.Tactics <> y:65 var
R11791:11791 LF.Tactics <> l:67 var
R11795:11796 LF.Poly <> :::'['_']' not
R11806:11808 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11805:11805 LF.Tactics <> x:64 var
R11809:11809 LF.Tactics <> z:66 var
prf 12062:12068 <> eqb_0_l
binder 12079:12079 <> n:68
R12098:12101 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12091:12093 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12086:12089 LF.Basics <> ::nat_scope:x_'=?'_x not
R12090:12090 LF.Tactics <> n:68 var
R12094:12097 LF.Basics <> true constr
R12103:12105 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12102:12102 LF.Tactics <> n:68 var
prf 12718:12719 <> ex
R12735:12737 Coq.Init.Datatypes <> nat ind
binder 12730:12730 <> x:69
binder 12732:12732 <> y:70
R12757:12760 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12748:12751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12744:12746 LF.Basics <> ::nat_scope:x_'+'_x not
R12747:12747 LF.Tactics <> x:69 var
R12753:12755 LF.Basics <> ::nat_scope:x_'+'_x not
R12756:12756 LF.Tactics <> y:70 var
R12762:12764 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12761:12761 LF.Tactics <> y:70 var
R12765:12765 LF.Tactics <> x:69 var
prf 13138:13144 <> f_equal
binder 13156:13156 <> A:71
binder 13158:13158 <> B:72
R13173:13176 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13172:13172 LF.Tactics <> A:71 var
R13177:13177 LF.Tactics <> B:72 var
binder 13169:13169 <> f:73
R13186:13186 LF.Tactics <> A:71 var
binder 13181:13181 <> x:74
binder 13183:13183 <> y:75
R13197:13200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13193:13195 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13192:13192 LF.Tactics <> x:74 var
R13196:13196 LF.Tactics <> y:75 var
R13204:13206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13201:13201 LF.Tactics <> f:73 var
R13203:13203 LF.Tactics <> x:74 var
R13207:13207 LF.Tactics <> f:73 var
R13209:13209 LF.Tactics <> y:75 var
prf 13281:13301 <> eq_implies_succ_equal
R13319:13321 Coq.Init.Datatypes <> nat ind
binder 13313:13313 <> n:76
binder 13315:13315 <> m:77
R13332:13335 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13328:13330 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13327:13327 LF.Tactics <> n:76 var
R13331:13331 LF.Tactics <> m:77 var
R13339:13341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13336:13336 Coq.Init.Datatypes <> S constr
R13338:13338 LF.Tactics <> n:76 var
R13342:13342 Coq.Init.Datatypes <> S constr
R13344:13344 LF.Tactics <> m:77 var
R13374:13380 LF.Tactics <> f_equal thm
R13374:13380 LF.Tactics <> f_equal thm
prf 13805:13826 <> eq_implies_succ_equal'
R13844:13846 Coq.Init.Datatypes <> nat ind
binder 13838:13838 <> n:78
binder 13840:13840 <> m:79
R13857:13860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13853:13855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13852:13852 LF.Tactics <> n:78 var
R13856:13856 LF.Tactics <> m:79 var
R13864:13866 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13861:13861 Coq.Init.Datatypes <> S constr
R13863:13863 LF.Tactics <> n:78 var
R13867:13867 Coq.Init.Datatypes <> S constr
R13869:13869 LF.Tactics <> m:79 var
prf 14352:14356 <> S_inj
R14374:14376 Coq.Init.Datatypes <> nat ind
binder 14368:14368 <> n:80
binder 14370:14370 <> m:81
R14384:14387 LF.Basics <> bool ind
binder 14380:14380 <> b:82
R14413:14419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14393:14393 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14408:14411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14394:14394 LF.Basics <> ::nat_scope:x_'=?'_x not
R14398:14403 LF.Basics <> ::nat_scope:x_'=?'_x not
R14407:14407 LF.Basics <> ::nat_scope:x_'=?'_x not
R14395:14395 Coq.Init.Datatypes <> S constr
R14397:14397 LF.Tactics <> n:80 var
R14404:14404 Coq.Init.Datatypes <> S constr
R14406:14406 LF.Tactics <> m:81 var
R14412:14412 LF.Tactics <> b:82 var
R14420:14420 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14427:14430 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14422:14425 LF.Basics <> ::nat_scope:x_'=?'_x not
R14421:14421 LF.Tactics <> n:80 var
R14426:14426 LF.Tactics <> m:81 var
R14431:14431 LF.Tactics <> b:82 var
prf 15262:15267 <> silly4
R15289:15291 Coq.Init.Datatypes <> nat ind
binder 15279:15279 <> n:83
binder 15281:15281 <> m:84
binder 15283:15283 <> p:85
binder 15285:15285 <> q:86
R15297:15297 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15312:15318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15303:15306 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15299:15301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15298:15298 LF.Tactics <> n:83 var
R15302:15302 LF.Tactics <> m:84 var
R15308:15310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15307:15307 LF.Tactics <> p:85 var
R15311:15311 LF.Tactics <> q:86 var
R15324:15329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15320:15322 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15319:15319 LF.Tactics <> m:84 var
R15323:15323 LF.Tactics <> n:83 var
R15331:15333 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15330:15330 LF.Tactics <> q:86 var
R15334:15334 LF.Tactics <> p:85 var
prf 16961:16983 <> double_injective_FAILED
binder 16994:16994 <> n:87
binder 16996:16996 <> m:88
R17020:17025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17009:17011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17001:17006 LF.Induction <> double def
R17008:17008 LF.Tactics <> n:87 var
R17012:17017 LF.Induction <> double def
R17019:17019 LF.Tactics <> m:88 var
R17027:17029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17026:17026 LF.Tactics <> n:87 var
R17030:17030 LF.Tactics <> m:88 var
R17333:17339 LF.Tactics <> f_equal thm
R17333:17339 LF.Tactics <> f_equal thm
prf 19683:19698 <> double_injective
binder 19709:19709 <> n:89
binder 19711:19711 <> m:90
R19735:19740 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19724:19726 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19716:19721 LF.Induction <> double def
R19723:19723 LF.Tactics <> n:89 var
R19727:19732 LF.Induction <> double def
R19734:19734 LF.Tactics <> m:90 var
R19742:19744 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19741:19741 LF.Tactics <> n:89 var
R19745:19745 LF.Tactics <> m:90 var
R20629:20635 LF.Tactics <> f_equal thm
R20629:20635 LF.Tactics <> f_equal thm
prf 21668:21675 <> eqb_true
binder 21686:21686 <> n:91
binder 21688:21688 <> m:92
R21706:21709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21699:21701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21694:21697 LF.Basics <> ::nat_scope:x_'=?'_x not
R21693:21693 LF.Tactics <> n:91 var
R21698:21698 LF.Tactics <> m:92 var
R21702:21705 LF.Basics <> true constr
R21711:21713 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21710:21710 LF.Tactics <> n:91 var
R21714:21714 LF.Tactics <> m:92 var
R21931:21937 LF.Tactics <> f_equal thm
R21931:21937 LF.Tactics <> f_equal thm
def 23225:23255 <> manual_grade_for_informal_proof
R23259:23264 Coq.Init.Datatypes <> option ind
R23270:23270 LF.Poly <> ::type_scope:x_'*'_x not
R23267:23269 Coq.Init.Datatypes <> nat ind
R23271:23276 Coq.Strings.String <> string ind
R23282:23285 Coq.Init.Datatypes <> None constr
prf 23523:23540 <> plus_n_n_injective
binder 23551:23551 <> n:93
binder 23553:23553 <> m:94
R23571:23576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23563:23565 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23559:23561 LF.Basics <> ::nat_scope:x_'+'_x not
R23558:23558 LF.Tactics <> n:93 var
R23562:23562 LF.Tactics <> n:93 var
R23567:23569 LF.Basics <> ::nat_scope:x_'+'_x not
R23566:23566 LF.Tactics <> m:94 var
R23570:23570 LF.Tactics <> m:94 var
R23578:23580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23577:23577 LF.Tactics <> n:93 var
R23581:23581 LF.Tactics <> m:94 var
R23798:23804 LF.Tactics <> f_equal thm
R23798:23804 LF.Tactics <> f_equal thm
R23843:23851 LF.Induction <> plus_n_Sm thm
R23843:23851 LF.Induction <> plus_n_Sm thm
R23843:23851 LF.Induction <> plus_n_Sm thm
R23873:23881 LF.Induction <> plus_n_Sm thm
R23873:23881 LF.Induction <> plus_n_Sm thm
R23873:23881 LF.Induction <> plus_n_Sm thm
prf 24255:24283 <> double_injective_take2_FAILED
binder 24294:24294 <> n:95
binder 24296:24296 <> m:96
R24320:24325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24309:24311 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24301:24306 LF.Induction <> double def
R24308:24308 LF.Tactics <> n:95 var
R24312:24317 LF.Induction <> double def
R24319:24319 LF.Tactics <> m:96 var
R24327:24329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24326:24326 LF.Tactics <> n:95 var
R24330:24330 LF.Tactics <> m:96 var
R24633:24639 LF.Tactics <> f_equal thm
R24633:24639 LF.Tactics <> f_equal thm
prf 25580:25601 <> double_injective_take2
binder 25612:25612 <> n:97
binder 25614:25614 <> m:98
R25638:25643 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25627:25629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25619:25624 LF.Induction <> double def
R25626:25626 LF.Tactics <> n:97 var
R25630:25635 LF.Induction <> double def
R25637:25637 LF.Tactics <> m:98 var
R25645:25647 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25644:25644 LF.Tactics <> n:97 var
R25648:25648 LF.Tactics <> m:98 var
R26134:26140 LF.Tactics <> f_equal thm
R26134:26140 LF.Tactics <> f_equal thm
prf 28266:28285 <> nth_error_after_last
R28300:28302 Coq.Init.Datatypes <> nat ind
binder 28296:28296 <> n:99
binder 28306:28306 <> X:100
R28321:28324 LF.Poly <> list ind
R28326:28326 LF.Tactics <> X:100 var
binder 28317:28317 <> l:101
R28344:28349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28340:28342 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28332:28337 LF.Poly <> length def
R28339:28339 LF.Tactics <> l:101 var
R28343:28343 LF.Tactics <> n:99 var
R28363:28365 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28350:28358 LF.Poly <> nth_error def
R28362:28362 LF.Tactics <> n:99 var
R28360:28360 LF.Tactics <> l:101 var
R28366:28369 Coq.Init.Datatypes <> None constr
def 28939:28944 <> square
binder 28946:28946 <> n:102
R28952:28954 LF.Basics <> ::nat_scope:x_'*'_x not
R28951:28951 LF.Tactics <> n:102 var
R28955:28955 LF.Tactics <> n:102 var
prf 29026:29036 <> square_mult
binder 29047:29047 <> n:103
binder 29049:29049 <> m:104
R29066:29068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29052:29057 LF.Tactics <> square def
R29061:29063 LF.Basics <> ::nat_scope:x_'*'_x not
R29060:29060 LF.Tactics <> n:103 var
R29064:29064 LF.Tactics <> m:104 var
R29077:29079 LF.Basics <> ::nat_scope:x_'*'_x not
R29069:29074 LF.Tactics <> square def
R29076:29076 LF.Tactics <> n:103 var
R29080:29085 LF.Tactics <> square def
R29087:29087 LF.Tactics <> m:104 var
R29402:29407 LF.Tactics <> square def
R29726:29735 LF.Induction <> mult_assoc thm
R29726:29735 LF.Induction <> mult_assoc thm
R29726:29735 LF.Induction <> mult_assoc thm
R29761:29763 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29757:29759 LF.Basics <> ::nat_scope:x_'*'_x not
R29753:29755 LF.Basics <> ::nat_scope:x_'*'_x not
R29769:29771 LF.Basics <> ::nat_scope:x_'*'_x not
R29765:29767 LF.Basics <> ::nat_scope:x_'*'_x not
R29761:29763 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29757:29759 LF.Basics <> ::nat_scope:x_'*'_x not
R29753:29755 LF.Basics <> ::nat_scope:x_'*'_x not
R29769:29771 LF.Basics <> ::nat_scope:x_'*'_x not
R29765:29767 LF.Basics <> ::nat_scope:x_'*'_x not
R29790:29797 LF.Induction <> mul_comm thm
R29790:29797 LF.Induction <> mul_comm thm
R29790:29797 LF.Induction <> mul_comm thm
R29806:29815 LF.Induction <> mult_assoc thm
R29806:29815 LF.Induction <> mult_assoc thm
R29841:29850 LF.Induction <> mult_assoc thm
R29841:29850 LF.Induction <> mult_assoc thm
R29841:29850 LF.Induction <> mult_assoc thm
def 30236:30238 <> foo
R30244:30246 Coq.Init.Datatypes <> nat ind
binder 30241:30241 <> x:105
prf 30468:30479 <> silly_fact_1
binder 30490:30490 <> m:106
R30502:30504 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30498:30500 LF.Basics <> ::nat_scope:x_'+'_x not
R30493:30495 LF.Tactics <> foo def
R30497:30497 LF.Tactics <> m:106 var
R30516:30518 LF.Basics <> ::nat_scope:x_'+'_x not
R30505:30507 LF.Tactics <> foo def
R30511:30513 LF.Basics <> ::nat_scope:x_'+'_x not
R30510:30510 LF.Tactics <> m:106 var
def 30746:30748 <> bar
binder 30750:30750 <> x:107
R30763:30763 LF.Tactics <> x:107 var
R30774:30774 Coq.Init.Datatypes <> O constr
R30785:30785 Coq.Init.Datatypes <> S constr
prf 30859:30877 <> silly_fact_2_FAILED
binder 30888:30888 <> m:109
R30900:30902 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30896:30898 LF.Basics <> ::nat_scope:x_'+'_x not
R30891:30893 LF.Tactics <> bar def
R30895:30895 LF.Tactics <> m:109 var
R30914:30916 LF.Basics <> ::nat_scope:x_'+'_x not
R30903:30905 LF.Tactics <> bar def
R30909:30911 LF.Basics <> ::nat_scope:x_'+'_x not
R30908:30908 LF.Tactics <> m:109 var
prf 31903:31914 <> silly_fact_2
binder 31925:31925 <> m:110
R31937:31939 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31933:31935 LF.Basics <> ::nat_scope:x_'+'_x not
R31928:31930 LF.Tactics <> bar def
R31932:31932 LF.Tactics <> m:110 var
R31951:31953 LF.Basics <> ::nat_scope:x_'+'_x not
R31940:31942 LF.Tactics <> bar def
R31946:31948 LF.Basics <> ::nat_scope:x_'+'_x not
R31945:31945 LF.Tactics <> m:110 var
prf 32301:32313 <> silly_fact_2'
binder 32324:32324 <> m:111
R32336:32338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32332:32334 LF.Basics <> ::nat_scope:x_'+'_x not
R32327:32329 LF.Tactics <> bar def
R32331:32331 LF.Tactics <> m:111 var
R32350:32352 LF.Basics <> ::nat_scope:x_'+'_x not
R32339:32341 LF.Tactics <> bar def
R32345:32347 LF.Basics <> ::nat_scope:x_'+'_x not
R32344:32344 LF.Tactics <> m:111 var
R32384:32386 LF.Tactics <> bar def
def 33032:33039 <> sillyfun
R33046:33048 Coq.Init.Datatypes <> nat ind
binder 33042:33042 <> n:112
R33053:33056 LF.Basics <> bool ind
R33067:33070 LF.Basics <> ::nat_scope:x_'=?'_x not
R33066:33066 LF.Tactics <> n:112 var
R33095:33098 LF.Basics <> ::nat_scope:x_'=?'_x not
R33094:33094 LF.Tactics <> n:112 var
R33119:33123 LF.Basics <> false constr
R33106:33110 LF.Basics <> false constr
R33078:33082 LF.Basics <> false constr
prf 33135:33148 <> sillyfun_false
R33164:33166 Coq.Init.Datatypes <> nat ind
binder 33160:33160 <> n:113
R33182:33184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33172:33179 LF.Tactics <> sillyfun def
R33181:33181 LF.Tactics <> n:113 var
R33185:33189 LF.Basics <> false constr
R33218:33225 LF.Tactics <> sillyfun def
R33241:33244 LF.Basics <> ::nat_scope:x_'=?'_x not
R33241:33244 LF.Basics <> ::nat_scope:x_'=?'_x not
R33333:33336 LF.Basics <> ::nat_scope:x_'=?'_x not
R33333:33336 LF.Basics <> ::nat_scope:x_'=?'_x not
def 34209:34213 <> split
binder 34216:34216 <> X:114
binder 34218:34218 <> Y:115
R34233:34236 LF.Poly <> list ind
R34240:34240 LF.Poly <> ::type_scope:x_'*'_x not
R34239:34239 LF.Tactics <> X:114 var
R34241:34241 LF.Tactics <> Y:115 var
binder 34229:34229 <> l:116
R34262:34262 LF.Poly <> ::type_scope:x_'*'_x not
R34269:34273 LF.Poly <> ::type_scope:x_'*'_x not
R34280:34280 LF.Poly <> ::type_scope:x_'*'_x not
R34263:34266 LF.Poly <> list ind
R34268:34268 LF.Tactics <> X:114 var
R34274:34277 LF.Poly <> list ind
R34279:34279 LF.Tactics <> Y:115 var
R34293:34293 LF.Tactics <> l:116 var
R34304:34305 LF.Poly <> :::'['_']' not
R34310:34310 LF.Poly <> :::'('_x_','_x_')' not
R34313:34314 LF.Poly <> :::'('_x_','_x_')' not
R34317:34317 LF.Poly <> :::'('_x_','_x_')' not
R34311:34312 LF.Poly <> :::'['_']' not
R34315:34316 LF.Poly <> :::'['_']' not
R34329:34332 LF.Poly <> :::x_'::'_x not
R34323:34323 LF.Poly <> :::'('_x_','_x_')' not
R34325:34326 LF.Poly <> :::'('_x_','_x_')' not
R34328:34328 LF.Poly <> :::'('_x_','_x_')' not
R34350:34354 LF.Tactics <> split:117 def
R34371:34371 LF.Poly <> :::'('_x_','_x_')' not
R34374:34375 LF.Poly <> :::'('_x_','_x_')' not
R34378:34378 LF.Poly <> :::'('_x_','_x_')' not
R34383:34383 LF.Poly <> :::'('_x_','_x_')' not
R34391:34392 LF.Poly <> :::'('_x_','_x_')' not
R34400:34400 LF.Poly <> :::'('_x_','_x_')' not
R34385:34388 LF.Poly <> :::x_'::'_x not
R34394:34397 LF.Poly <> :::x_'::'_x not
prf 34510:34522 <> combine_split
binder 34533:34533 <> X:119
binder 34535:34535 <> Y:120
R34542:34545 LF.Poly <> list ind
R34549:34551 LF.Poly <> ::type_scope:x_'*'_x not
R34548:34548 LF.Tactics <> X:119 var
R34552:34552 LF.Tactics <> Y:120 var
binder 34538:34538 <> l:121
binder 34556:34557 <> l1:122
binder 34559:34560 <> l2:123
R34583:34588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34572:34574 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34565:34569 LF.Tactics <> split def
R34571:34571 LF.Tactics <> l:121 var
R34575:34575 LF.Poly <> :::'('_x_','_x_')' not
R34578:34579 LF.Poly <> :::'('_x_','_x_')' not
R34582:34582 LF.Poly <> :::'('_x_','_x_')' not
R34576:34577 LF.Tactics <> l1:122 var
R34580:34581 LF.Tactics <> l2:123 var
R34602:34604 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34589:34595 LF.Poly <> combine def
R34600:34601 LF.Tactics <> l2:123 var
R34597:34598 LF.Tactics <> l1:122 var
R34605:34605 LF.Tactics <> l:121 var
R34811:34815 LF.Tactics <> split def
R34811:34815 LF.Tactics <> split def
def 35482:35490 <> sillyfun1
R35497:35499 Coq.Init.Datatypes <> nat ind
binder 35493:35493 <> n:124
R35504:35507 LF.Basics <> bool ind
R35518:35521 LF.Basics <> ::nat_scope:x_'=?'_x not
R35517:35517 LF.Tactics <> n:124 var
R35545:35548 LF.Basics <> ::nat_scope:x_'=?'_x not
R35544:35544 LF.Tactics <> n:124 var
R35568:35572 LF.Basics <> false constr
R35556:35559 LF.Basics <> true constr
R35529:35532 LF.Basics <> true constr
prf 35767:35786 <> sillyfun1_odd_FAILED
R35802:35804 Coq.Init.Datatypes <> nat ind
binder 35798:35798 <> n:125
R35828:35833 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35821:35823 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35810:35818 LF.Tactics <> sillyfun1 def
R35820:35820 LF.Tactics <> n:125 var
R35824:35827 LF.Basics <> true constr
R35839:35841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35834:35836 LF.Basics <> odd def
R35838:35838 LF.Tactics <> n:125 var
R35842:35845 LF.Basics <> true constr
R35877:35885 LF.Tactics <> sillyfun1 def
R35907:35910 LF.Basics <> ::nat_scope:x_'=?'_x not
R35907:35910 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 36712:36724 <> sillyfun1_odd
R36740:36742 Coq.Init.Datatypes <> nat ind
binder 36736:36736 <> n:126
R36766:36771 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36759:36761 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36748:36756 LF.Tactics <> sillyfun1 def
R36758:36758 LF.Tactics <> n:126 var
R36762:36765 LF.Basics <> true constr
R36777:36779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36772:36774 LF.Basics <> odd def
R36776:36776 LF.Tactics <> n:126 var
R36780:36783 LF.Basics <> true constr
R36815:36823 LF.Tactics <> sillyfun1 def
R36845:36848 LF.Basics <> ::nat_scope:x_'=?'_x not
R36845:36848 LF.Basics <> ::nat_scope:x_'=?'_x not
R37095:37102 LF.Tactics <> eqb_true thm
R37095:37102 LF.Tactics <> eqb_true thm
R37394:37397 LF.Basics <> ::nat_scope:x_'=?'_x not
R37394:37397 LF.Basics <> ::nat_scope:x_'=?'_x not
R37454:37461 LF.Tactics <> eqb_true thm
R37454:37461 LF.Tactics <> eqb_true thm
prf 37637:37658 <> bool_fn_applied_thrice
R37680:37683 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37676:37679 LF.Basics <> bool ind
R37684:37687 LF.Basics <> bool ind
binder 37672:37672 <> f:127
R37695:37698 LF.Basics <> bool ind
binder 37691:37691 <> b:128
R37715:37717 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37704:37704 LF.Tactics <> f:127 var
R37707:37707 LF.Tactics <> f:127 var
R37710:37710 LF.Tactics <> f:127 var
R37712:37712 LF.Tactics <> b:128 var
R37718:37718 LF.Tactics <> f:127 var
R37720:37720 LF.Tactics <> b:128 var
R37780:37783 LF.Basics <> true constr
R37780:37783 LF.Basics <> true constr
R37864:37868 LF.Basics <> false constr
R37864:37868 LF.Basics <> false constr
R37974:37978 LF.Basics <> false constr
R37974:37978 LF.Basics <> false constr
R38012:38015 LF.Basics <> true constr
R38012:38015 LF.Basics <> true constr
prf 40767:40773 <> eqb_sym
R40791:40793 Coq.Init.Datatypes <> nat ind
binder 40785:40785 <> n:129
binder 40787:40787 <> m:130
R40799:40799 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40806:40810 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40817:40817 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40801:40804 LF.Basics <> ::nat_scope:x_'=?'_x not
R40800:40800 LF.Tactics <> n:129 var
R40805:40805 LF.Tactics <> m:130 var
R40812:40815 LF.Basics <> ::nat_scope:x_'=?'_x not
R40811:40811 LF.Tactics <> m:130 var
R40816:40816 LF.Tactics <> n:129 var
prf 41416:41424 <> eqb_trans
binder 41435:41435 <> n:131
binder 41437:41437 <> m:132
binder 41439:41439 <> p:133
R41457:41462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41450:41452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41445:41448 LF.Basics <> ::nat_scope:x_'=?'_x not
R41444:41444 LF.Tactics <> n:131 var
R41449:41449 LF.Tactics <> m:132 var
R41453:41456 LF.Basics <> true constr
R41476:41481 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41469:41471 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41464:41467 LF.Basics <> ::nat_scope:x_'=?'_x not
R41463:41463 LF.Tactics <> m:132 var
R41468:41468 LF.Tactics <> p:133 var
R41472:41475 LF.Basics <> true constr
R41488:41490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41483:41486 LF.Basics <> ::nat_scope:x_'=?'_x not
R41482:41482 LF.Tactics <> n:131 var
R41487:41487 LF.Tactics <> p:133 var
R41491:41494 LF.Basics <> true constr
R41552:41555 LF.Basics <> ::nat_scope:x_'=?'_x not
R41532:41539 LF.Tactics <> trans_eq thm
R41552:41555 LF.Basics <> ::nat_scope:x_'=?'_x not
R41532:41539 LF.Tactics <> trans_eq thm
R41566:41572 LF.Tactics <> f_equal thm
R41566:41572 LF.Tactics <> f_equal thm
R41581:41588 LF.Tactics <> eqb_true thm
R41581:41588 LF.Tactics <> eqb_true thm
def 42337:42359 <> split_combine_statement
binder 42468:42468 <> X:134
binder 42470:42470 <> Y:135
R42484:42487 LF.Poly <> list ind
R42489:42489 LF.Tactics <> X:134 var
binder 42480:42481 <> l1:136
R42498:42501 LF.Poly <> list ind
R42503:42503 LF.Tactics <> Y:135 var
binder 42493:42494 <> l2:137
R42530:42533 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42518:42520 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42509:42514 LF.Poly <> length def
R42516:42517 LF.Tactics <> l1:136 var
R42521:42526 LF.Poly <> length def
R42528:42529 LF.Tactics <> l2:137 var
R42554:42556 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42534:42538 LF.Tactics <> split def
R42540:42546 LF.Poly <> combine def
R42551:42552 LF.Tactics <> l2:137 var
R42548:42549 LF.Tactics <> l1:136 var
R42557:42557 LF.Poly <> :::'('_x_','_x_')' not
R42560:42561 LF.Poly <> :::'('_x_','_x_')' not
R42564:42564 LF.Poly <> :::'('_x_','_x_')' not
R42558:42559 LF.Tactics <> l1:136 var
R42562:42563 LF.Tactics <> l2:137 var
prf 42576:42588 <> split_combine
R42592:42614 LF.Tactics <> split_combine_statement def
def 42989:43018 <> manual_grade_for_split_combine
R43022:43027 Coq.Init.Datatypes <> option ind
R43033:43033 LF.Poly <> ::type_scope:x_'*'_x not
R43030:43032 Coq.Init.Datatypes <> nat ind
R43034:43039 Coq.Strings.String <> string ind
R43045:43048 Coq.Init.Datatypes <> None constr
prf 43226:43240 <> filter_exercise
binder 43252:43252 <> X:138
R43271:43274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43270:43270 LF.Tactics <> X:138 var
R43275:43278 LF.Basics <> bool ind
binder 43263:43266 <> test:139
R43319:43319 LF.Tactics <> X:138 var
binder 43315:43315 <> x:140
R43330:43333 LF.Poly <> list ind
R43335:43335 LF.Tactics <> X:138 var
binder 43323:43323 <> l:141
binder 43325:43326 <> lf:142
R43364:43369 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43354:43356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43341:43346 LF.Poly <> filter def
R43353:43353 LF.Tactics <> l:141 var
R43348:43351 LF.Tactics <> test:139 var
R43358:43361 LF.Poly <> :::x_'::'_x not
R43357:43357 LF.Tactics <> x:140 var
R43362:43363 LF.Tactics <> lf:142 var
R43376:43378 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43370:43373 LF.Tactics <> test:139 var
R43375:43375 LF.Tactics <> x:140 var
R43379:43382 LF.Basics <> true constr
def 44552:44558 <> forallb
binder 44561:44561 <> X:143
R44580:44583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44579:44579 LF.Tactics <> X:143 var
R44584:44587 LF.Basics <> bool ind
binder 44572:44575 <> test:144
R44595:44598 LF.Poly <> list ind
R44600:44600 LF.Tactics <> X:143 var
binder 44591:44591 <> l:145
R44605:44608 LF.Basics <> bool ind
R44621:44621 LF.Tactics <> l:145 var
R44632:44633 LF.Poly <> :::'['_']' not
R44638:44641 LF.Basics <> true constr
R44648:44651 LF.Poly <> :::x_'::'_x not
R44657:44660 LF.Basics <> andb def
R44663:44666 LF.Tactics <> test:144 var
R44672:44678 LF.Tactics <> forallb:146 def
R44680:44683 LF.Tactics <> test:144 var
def 44702:44715 <> test_forallb_1
R44742:44744 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44719:44725 LF.Tactics <> forallb def
R44731:44731 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44733:44733 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44735:44735 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44737:44737 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44739:44739 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44741:44741 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44727:44729 LF.Basics <> odd def
R44745:44748 LF.Basics <> true constr
def 44785:44798 <> test_forallb_2
R44828:44830 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44802:44808 LF.Tactics <> forallb def
R44815:44815 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44821:44821 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44827:44827 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44816:44820 LF.Basics <> false constr
R44822:44826 LF.Basics <> false constr
R44810:44813 LF.Basics <> negb def
R44831:44834 LF.Basics <> true constr
def 44871:44884 <> test_forallb_3
R44910:44912 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44888:44894 LF.Tactics <> forallb def
R44901:44901 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44903:44903 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44905:44905 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44907:44907 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44909:44909 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44896:44899 LF.Basics <> even def
R44913:44917 LF.Basics <> false constr
def 44954:44967 <> test_forallb_4
R44989:44991 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44971:44977 LF.Tactics <> forallb def
R44987:44988 LF.Poly <> :::'['_']' not
R44980:44982 LF.Basics <> eqb def
R44992:44995 LF.Basics <> true constr
def 45033:45039 <> existsb
binder 45042:45042 <> X:148
R45061:45064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45060:45060 LF.Tactics <> X:148 var
R45065:45068 LF.Basics <> bool ind
binder 45053:45056 <> test:149
R45076:45079 LF.Poly <> list ind
R45081:45081 LF.Tactics <> X:148 var
binder 45072:45072 <> l:150
R45086:45089 LF.Basics <> bool ind
R45102:45102 LF.Tactics <> l:150 var
R45113:45114 LF.Poly <> :::'['_']' not
R45119:45123 LF.Basics <> false constr
R45130:45133 LF.Poly <> :::x_'::'_x not
R45139:45141 LF.Basics <> orb def
R45144:45147 LF.Tactics <> test:149 var
R45153:45159 LF.Tactics <> existsb:151 def
R45161:45164 LF.Tactics <> test:149 var
def 45183:45196 <> test_existsb_1
R45225:45227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45200:45206 LF.Tactics <> existsb def
R45216:45216 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45218:45218 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45220:45220 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45222:45222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45224:45224 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45209:45211 LF.Basics <> eqb def
R45228:45232 LF.Basics <> false constr
def 45269:45282 <> test_existsb_2
R45323:45325 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45286:45292 LF.Tactics <> existsb def
R45306:45306 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45311:45311 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45316:45316 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45322:45322 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45307:45310 LF.Basics <> true constr
R45312:45315 LF.Basics <> true constr
R45317:45321 LF.Basics <> false constr
R45295:45298 LF.Basics <> andb def
R45300:45303 LF.Basics <> true constr
R45326:45329 LF.Basics <> true constr
def 45366:45379 <> test_existsb_3
R45408:45410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45383:45389 LF.Tactics <> existsb def
R45395:45395 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45397:45397 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45399:45399 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45401:45401 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45403:45403 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45405:45405 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45407:45407 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45391:45393 LF.Basics <> odd def
R45411:45414 LF.Basics <> true constr
def 45451:45464 <> test_existsb_4
R45483:45485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45468:45474 LF.Tactics <> existsb def
R45481:45482 LF.Poly <> :::'['_']' not
R45476:45479 LF.Basics <> even def
R45486:45490 LF.Basics <> false constr
def 45530:45537 <> existsb'
binder 45540:45540 <> X:153
R45559:45562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45558:45558 LF.Tactics <> X:153 var
R45563:45566 LF.Basics <> bool ind
binder 45551:45554 <> test:154
R45574:45577 LF.Poly <> list ind
R45579:45579 LF.Tactics <> X:153 var
binder 45570:45570 <> l:155
R45584:45587 LF.Basics <> bool ind
R45594:45597 LF.Basics <> negb def
R45600:45606 LF.Tactics <> forallb def
R45633:45633 LF.Tactics <> l:155 var
binder 45613:45613 <> x:156
R45618:45621 LF.Basics <> negb def
R45624:45627 LF.Tactics <> test:154 var
R45629:45629 LF.Tactics <> x:156 var
prf 45646:45661 <> existsb_existsb'
binder 45673:45673 <> X:157
R45692:45695 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45691:45691 LF.Tactics <> X:157 var
R45696:45699 LF.Basics <> bool ind
binder 45684:45687 <> test:158
R45707:45710 LF.Poly <> list ind
R45712:45712 LF.Tactics <> X:157 var
binder 45703:45703 <> l:159
R45732:45734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45718:45724 LF.Tactics <> existsb def
R45731:45731 LF.Tactics <> l:159 var
R45726:45729 LF.Tactics <> test:158 var
R45735:45742 LF.Tactics <> existsb' def
R45749:45749 LF.Tactics <> l:159 var
R45744:45747 LF.Tactics <> test:158 var
R45785:45791 LF.Tactics <> existsb def
R45801:45808 LF.Tactics <> existsb' def
